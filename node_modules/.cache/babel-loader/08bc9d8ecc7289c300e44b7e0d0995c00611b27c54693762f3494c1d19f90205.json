{"ast":null,"code":"var _jsxFileName = \"/Users/zasulanmuratov/Desktop/beginner-projects/random-quotes-generator-fullstack-beginner-project/random-quote-generator-front-4-beginner-project/src/components/RandomQuoteGenerator/RandomQuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../../styles/root/RandomQuoteGenerator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RandomQuoteGenerator = () => {\n  _s();\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/quotes/${randomNumber()}`).then(response => response.json()).then(data => {\n      setQuote(data.content);\n      setAuthor(data.author);\n    }).catch(error => console.log(error.message));\n  }, []);\n  const randomNumber = () => {\n    return Math.floor(Math.random() * 10 + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-generator-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-text\",\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-nav-bars\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-author\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quote-button\",\n        children: \"Get another button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomQuoteGenerator, \"63a70SWBG258FKVbsTTmq1TL57o=\");\n_c = RandomQuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"RandomQuoteGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RandomQuoteGenerator","_s","quote","setQuote","author","setAuthor","fetch","randomNumber","then","response","json","data","content","catch","error","console","log","message","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zasulanmuratov/Desktop/beginner-projects/random-quotes-generator-fullstack-beginner-project/random-quote-generator-front-4-beginner-project/src/components/RandomQuoteGenerator/RandomQuoteGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"../../styles/root/RandomQuoteGenerator.scss\";\n\nexport const RandomQuoteGenerator = () => {\n  const [quote, setQuote] = useState<string>(\"\");\n  const [author, setAuthor] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/quotes/${randomNumber()}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setQuote(data.content);\n        setAuthor(data.author);\n      })\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  const randomNumber = () => {\n    return Math.floor(Math.random() * 10 + 1);\n  };\n\n  return (\n    <div className=\"quote-generator-wrapper\">\n      <p className=\"quote-text\">{quote}</p>\n      <div className=\"quote-nav-bars\">\n        <div className=\"quote-author\">\n          {/* <img /> */}\n          <h1>{author}</h1>\n        </div>\n        <button className=\"quote-button\">Get another button</button>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,oCAAoCC,YAAY,CAAC,CAAC,EAAE,CAAC,CACxDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdR,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC;MACtBP,SAAS,CAACM,IAAI,CAACP,MAAM,CAAC;IACxB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMV,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC3C,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCvB,OAAA;MAAGsB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC3B,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BvB,OAAA;QAAKsB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAE3BvB,OAAA;UAAAuB,QAAA,EAAKlB;QAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACN3B,OAAA;QAAQsB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9BWD,oBAAoB;AAAA2B,EAAA,GAApB3B,oBAAoB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}