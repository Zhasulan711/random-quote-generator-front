{"ast":null,"code":"var _jsxFileName = \"/Users/zasulanmuratov/Desktop/beginner-projects/random-quotes-generator-fullstack-beginner-project/random-quote-generator-front-4-beginner-project/src/components/RandomQuoteGenerator/RandomQuoteGenerator.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"../../styles/root/RandomQuoteGenerator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RandomQuoteGenerator = () => {\n  _s();\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [randomNumber, setRandomNumber] = useState(1);\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/quotes/${randomNumber}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      if (data.content && data.author && data.image) {\n        setQuote(data.content);\n        setAuthor(data.author);\n        fetch(data.image).then(response => response.blob()).then(blob => {\n          const imageUrl = URL.createObjectURL(blob);\n          setImage(imageUrl);\n        });\n      }\n    }).catch(error => console.error(\"Fetch error:\", error.message));\n  }, [randomNumber]);\n  const handleClick = () => {\n    setRandomNumber(Math.floor(Math.random() * 10 + 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-generator-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote-text\",\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-nav-bars\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-author\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quote-button\",\n        onClick: handleClick,\n        children: \"Get another button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomQuoteGenerator, \"08mJOjoSfRAh4oq498uUBxm1C5w=\");\n_c = RandomQuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"RandomQuoteGenerator\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","RandomQuoteGenerator","_s","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","image","setImage","fetch","then","response","ok","Error","json","data","content","blob","imageUrl","URL","createObjectURL","catch","error","console","message","handleClick","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/zasulanmuratov/Desktop/beginner-projects/random-quotes-generator-fullstack-beginner-project/random-quote-generator-front-4-beginner-project/src/components/RandomQuoteGenerator/RandomQuoteGenerator.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport \"../../styles/root/RandomQuoteGenerator.scss\";\n\nexport const RandomQuoteGenerator = () => {\n  const [quote, setQuote] = useState<string>(\"\");\n  const [author, setAuthor] = useState<string>(\"\");\n  const [randomNumber, setRandomNumber] = useState<number>(1);\n  const [image, setImage] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/quotes/${randomNumber}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        if (data.content && data.author && data.image) {\n          setQuote(data.content);\n          setAuthor(data.author);\n\n          fetch(data.image)\n            .then((response) => response.blob())\n            .then((blob) => {\n              const imageUrl = URL.createObjectURL(blob);\n              setImage(imageUrl);\n            });\n        }\n      })\n      .catch((error) => console.error(\"Fetch error:\", error.message));\n  }, [randomNumber]);\n  const handleClick = () => {\n    setRandomNumber(Math.floor(Math.random() * 10 + 1));\n  };\n\n  return (\n    <div className=\"quote-generator-wrapper\">\n      <p className=\"quote-text\">{quote}</p>\n      <div className=\"quote-nav-bars\">\n        <div className=\"quote-author\">\n          <img src={image} alt={author} />\n          <h1>{author}</h1>\n        </div>\n        <button className=\"quote-button\" onClick={handleClick}>\n          Get another button\n        </button>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}